name: .NET Core Desktop

on:
  push:
    tags:
      - 'v*'
      
jobs:

  build:

    strategy:
      matrix:
        #configuration: [Debug, Release]
        configuration: [Release]

    runs-on: windows-latest  # For a list of available runner types, refer to
                             # https://help.github.com/en/actions/reference/workflow-syntax-for-github-actions#jobsjob_idruns-on

    env:
      Solution_Name: DUit-Launcher.sln                         # Replace with your solution name, i.e. MyWpfApp.sln.

    steps:
    - name: Install 7Zip PowerShell Module
      shell: powershell
      run: Install-Module 7Zip4PowerShell -Force -Verbose

    - name: Checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: 0

    # Install the .NET Core workload
    - name: Install .NET Core
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 5.0.x

    # Add  MSBuild to the PATH: https://github.com/microsoft/setup-msbuild
    - name: Setup MSBuild.exe
      uses: microsoft/setup-msbuild@v1.0.2
      
    # Restore the application to populate the obj folder with RuntimeIdentifiers
    - name: Restore the application
      run: msbuild $env:Solution_Name /t:Restore /p:Configuration=$env:Configuration
      env:
        Configuration: ${{ matrix.configuration }}
             
    - name: build the app
      run: |
        msbuild /p:Configuration=$env:Configuration 
        powershell Compress-7Zip "D:\a\DUit-Launcher\DUit-Launcher\DUit-Launcher\bin\$env:Configuration\netcoreapp3.1\" -ArchiveFileName "DUit-Launcher.zip" -Format Zip
      env:
        Configuration: ${{ matrix.configuration }}
        
    - name: Create Release
      id: create_release
      uses: actions/create-release@latest
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        body: |
          Automated Release
        draft: false
        prerelease: false
        
    - name: Upload Release Asset
      id: upload-release-asset-x64
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./DUit-Launcher.zip
        asset_name: DUit-Launcher.zip
        asset_content_type: application/zip
